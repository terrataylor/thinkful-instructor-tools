{"version":3,"sources":["env.js","components/Forms/AddEditForm.js","components/Modals/Modal.js","components/Tables/DataTable.js","components/Roster/Roster.js","components/Tables/AttendanceTable.js","components/Attendance/Attendance.js","components/Organization/Organization.js","components/YamlGenerator/YamlGenerator.js","components/Resources/Resources.js","App.js","serviceWorker.js","index.js","resources/view_a_ruberic(admins).mp4"],"names":["apiUrl","AddEditForm","state","id","fname","lname","email","asm","location","slack","paymentplan","cohort","githuborg","preferredname","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","catch","err","submitFormEdit","updateState","this","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","Button","React","Component","ModalForm","prevState","modal","closeBtn","className","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","students","length","map","key","scope","width","Table","responsive","hover","Roster","studentList","handleChange","student","addToDB","getItems","itemIndex","findIndex","data","newArray","slice","updatedItems","filter","deleteAllStudents","event","parseStudents","studentsArr","replace","split","formattedStudents","i","arr","formattedState","studentObj","includes","push","sort","a","b","textA","toUpperCase","textB","forEach","Container","fluid","Row","Col","required","rows","handleSubmit","bind","margin","filename","AttendanceTable","present","Attendance","attendenceRecord","chat","takeAttendance","attendanceArray","toLowerCase","undefined","fa","fb","Organization","token","sentStudents","ok","invite","error","githubOrg","inviteOne","inviteAll","YamlGenerator","courseCode","cohortNum","startDate","workshopUrl","timeZone","breakWeek1","breakWeek2","rewriteInputPath","slackHandles","checked","generateYaml","nameList","trim","output","firstName","lastName","lastInitial","checkIfDups","join","list","counter","defaultValue","md","Resources","Card","CardHeader","CardBody","CardTitle","tag","CardText","href","playsInline","src","rubericVideo","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","to","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f99c0d9a.chunk.js","sourcesContent":["const prodUrl = \"https://instructor-tools-api.herokuapp.com/students\";\r\nconst devUrl = \"http://localhost:3000/students\"\r\n\r\n\r\nlet apiUrl = prodUrl;\r\n\r\nexport default apiUrl;","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport apiUrl from '../../env'\r\n\r\nclass AddEditForm extends React.Component {\r\n  state = {\r\n    id: '',\r\n    fname:'', lname:'', email:'', asm:'', location:'', slack:'', paymentplan:'', cohort:'',githuborg:'',preferredname:''\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  submitFormAdd = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    fetch(apiUrl, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        fname: this.state.fname,\r\n        lname: this.state.lname,\r\n        preferredname: this.state.preferredname,\r\n        email: this.state.email,\r\n        asm: this.state.asm,\r\n        location: this.state.location,\r\n        slack: this.state.slack,\r\n        paymentplan: this.state.paymentplan,\r\n        cohort: this.state.cohort,\r\n        githuborg:this.state.githuborg\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(item => {\r\n        if(Array.isArray(item)) {\r\n          this.props.addItemToState(item[0])\r\n          this.props.toggle()\r\n        } else {\r\n          console.log('failure')\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  submitFormEdit = e => {\r\n    e.preventDefault()\r\n    console.log(\"Before Update\",this.state);\r\n    fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        id:this.state.id,\r\n        fname: this.state.fname,\r\n        lname: this.state.lname,\r\n        preferredname: this.state.preferredname,\r\n        email: this.state.email,\r\n        asm: this.state.asm,\r\n        location: this.state.location,\r\n        slack: this.state.slack,\r\n        paymentplan: this.state.paymentplan,\r\n        cohort: this.state.cohort,\r\n        githuborg:this.state.githuborg\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(item => {\r\n            console.log(\"After update\",item)\r\n        if(Array.isArray(item)) {\r\n         \r\n          this.props.updateState(item[0])\r\n          this.props.toggle()\r\n        } else {\r\n          console.log('failure')\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount(){\r\n    // if item exists, populate the state with proper data\r\n    console.log(this.props.item)\r\n    if(this.props.item){\r\n      const { id, fname, lname, email, asm, location, slack, paymentplan, cohort,githuborg,preferredname } = this.props.item\r\n      this.setState({ id,fname, lname, email, asm, location, slack, paymentplan, cohort,githuborg,preferredname })\r\n    }\r\n  }\r\n\r\n  render() {\r\n   // console.log(this.state)\r\n    return (\r\n      <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\r\n        <FormGroup>\r\n          <Label for=\"first\">First Name</Label>\r\n          <Input type=\"text\" name=\"fname\" id=\"first\" onChange={this.onChange} value={this.state.fname === null ? '' : this.state.fname} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"last\">Last Name</Label>\r\n          <Input type=\"text\" name=\"lname\" id=\"last\" onChange={this.onChange} value={this.state.lname === null ? '' : this.state.lname}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">PreferredName</Label>\r\n          <Input type=\"text\" name=\"preferredname\" id=\"preferredname\" onChange={this.onChange} value={this.state.preferredname === null ? '' : this.state.preferredname}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email</Label>\r\n          <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"phone\">ASM</Label>\r\n          <Input type=\"text\" name=\"asm\" id=\"phone\" onChange={this.onChange} value={this.state.asm === null ? '' : this.state.asm}  placeholder=\"Suzy Smith\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"location\">Location</Label>\r\n          <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"hobby\">Slack</Label>\r\n          <Input type=\"text\" name=\"slack\" id=\"hobby\" onChange={this.onChange} value={this.state.slack}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"payment\">Payment Type</Label>\r\n          <Input type=\"text\" name=\"paymentplan\" id=\"payment\" onChange={this.onChange} value={this.state.paymentplan}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"cohort\">Cohort</Label>\r\n          <Input type=\"text\" name=\"cohort\" id=\"cohort\" onChange={this.onChange} value={this.state.cohort}  />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"cohort\">Github Organization</Label>\r\n          <Input type=\"text\" name=\"githuborg\" id=\"githuborg\" onChange={this.onChange} value={this.state.githuborg}  />\r\n        </FormGroup>\r\n        <Button>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEditForm;","import React, { Component } from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport AddEditForm from '../Forms/AddEditForm';\r\n\r\nclass ModalForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      modal: false\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }))\r\n  }\r\n\r\n  render() {\r\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\r\n\r\n      const label = this.props.buttonLabel\r\n\r\n      let button = ''\r\n      let title = ''\r\n\r\n      if(label === 'Edit'){\r\n        button = <Button\r\n                  color=\"warning\"\r\n                  onClick={this.toggle}\r\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Edit Item'\r\n      } else {\r\n        button = <Button\r\n                  color=\"success\"\r\n                  onClick={this.toggle}\r\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\r\n                </Button>\r\n        title = 'Add New Item'\r\n      }\r\n\r\n\r\n      return (\r\n      <div>\r\n        {button}\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\r\n          <ModalBody>\r\n            <AddEditForm\r\n              addItemToState={this.props.addItemToState}\r\n              updateState={this.props.updateState}\r\n              toggle={this.toggle}\r\n              item={this.props.item} />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModalForm","import React, { Component } from 'react'\r\nimport { Table, Button } from 'reactstrap';\r\nimport ModalForm from '../Modals/Modal';\r\nimport apiUrl from '../../env';\r\n\r\nclass DataTable extends Component {\r\n\r\n    deleteItem = id => {\r\n        let confirmDelete = window.confirm('Delete item forever?')\r\n        if (confirmDelete) {\r\n            fetch(apiUrl, {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(item => {\r\n                    this.props.deleteItemFromState(id)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let items = (<tr><td>No Items</td></tr>);\r\n        if (this.props.students.length > 0) {\r\n            items = this.props.students.map(item => {\r\n             //   console.log(item)\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <th scope=\"row\">{item.id}</th>\r\n                        <td>{item.fname}</td>\r\n                        <td>{item.lname}</td>\r\n                        <td>{item.preferredname}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.asm}</td>\r\n                        <td>{item.location}</td>\r\n                        <td>{item.slack}</td>\r\n                        <td>{item.paymentplan}</td>\r\n                        <td>{item.cohort}</td>\r\n                        <td>\r\n                            <div style={{ width: \"110px\" }}>\r\n                                <ModalForm buttonLabel=\"Edit\" item={item} updateState={this.props.updateState} />\r\n                                {' '}\r\n                                <Button color=\"danger\" onClick={() => this.deleteItem(item.id)}>Del</Button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Table responsive hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>First</th>\r\n                        <th>Last</th>\r\n                        <th>Preferred Name</th>\r\n                        <th>Email</th>\r\n                        <th>ASM</th>\r\n                        <th>Location</th>\r\n                        <th>Slack</th>\r\n                        <th>Payment Type</th>\r\n                        <th>Cohort</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataTable","import React from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport ModalForm from '../Modals/Modal';\r\nimport DataTable from '../Tables/DataTable';\r\nimport { CSVLink } from \"react-csv\";\r\nimport apiUrl from '../../env'\r\n\r\nclass Roster extends React.Component {\r\n\r\n    state = {\r\n        students: [],\r\n        studentList: '',\r\n        cohort: '',\r\n        githuborg: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.parseStudents(this.state.studentList);\r\n    }\r\n\r\n    parseStudents(students) {\r\n        let studentsArr = students.replace(/\\t/g, \",\").split(\"\\n\");\r\n        let {cohort,githuborg}= this.state;\r\n        let formattedStudents = [];\r\n        for (let i = 0; i < studentsArr.length; i++) {\r\n            let arr = studentsArr[i].split(\",\");\r\n             let state = arr[6];\r\n            let formattedState = state.replace(';not started;','').replace(';hidden from queue','').replace('ENROLLED','').replace('unmatched;','').replace('undefined','');\r\n            \r\n            let studentObj =\r\n            {\r\n                fname: arr[0],\r\n                lname: arr[1],\r\n                email: arr[2],\r\n                asm: arr[3],\r\n                location: `${arr[5]},${formattedState}`,\r\n                paymentplan: arr[8],\r\n                cohort: cohort,\r\n                githuborg: githuborg\r\n            };\r\n            //Getting slack handle\r\n            if (arr[9].includes(\"@\")) {\r\n                studentObj.slack = arr[9];\r\n            } else {\r\n                studentObj.slack = arr[10]\r\n            }\r\n            console.log(studentObj);\r\n            //getting payment plan\r\n            if (arr[7].includes(\"isa_stipend\") || arr[7].includes(\"isa\") || arr[7].includes(\"m2m\") || arr[7].includes(\"loan\") || arr[7].includes(\"upfront\")) {\r\n                studentObj.paymentplan = arr[7];\r\n            }\r\n            formattedStudents.push(studentObj);\r\n        }\r\n        formattedStudents.sort((a, b) => {\r\n            var textA = a.fname.toUpperCase();\r\n            var textB = b.fname.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        formattedStudents.forEach(student => {\r\n            this.addToDB(student);\r\n        })\r\n\r\n    }\r\n\r\n    addItemToState = (student) => {\r\n        this.setState(prevState => ({\r\n            students: [...prevState.students, student]\r\n        }))\r\n    }\r\n\r\n\r\n    addToDB = student => {\r\n        fetch(apiUrl, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                fname: student.fname,\r\n                lname: student.lname,\r\n                preferredname: student.preferredname,\r\n                email: student.email,\r\n                asm: student.asm,\r\n                location: student.location,\r\n                slack: student.slack,\r\n                paymentplan: student.paymentplan,\r\n                cohort: student.cohort,\r\n                githuborg: student.githuborg\r\n            })\r\n        }).then(response => response.json())\r\n            .then(item => {\r\n                this.getItems();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    getItems() {\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(students => {\r\n              //  console.log(students);\r\n                students.sort(function (a, b) {\r\n                    return a.id - b.id;\r\n                });\r\n                this.setState({ students })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    updateState = (student) => {\r\n        console.log(student);\r\n        const itemIndex = this.state.students.findIndex(data => data.id === student.id)\r\n        const newArray = [\r\n            // destructure all items from beginning to the indexed item\r\n            ...this.state.students.slice(0, itemIndex),\r\n            // add the updated item to the array\r\n            student,\r\n            // add the rest of the items to the array from the index after the replaced item\r\n            ...this.state.students.slice(itemIndex + 1)\r\n        ]\r\n        this.setState({ students: newArray })\r\n    }\r\n\r\n    deleteItemFromState = (id) => {\r\n        const updatedItems = this.state.students.filter(item => item.id !== id)\r\n        this.setState({ students: updatedItems })\r\n    }\r\n\r\n    deleteAllStudents = () => {\r\n        let confirmDelete = window.confirm('Delete all Students?')\r\n        if (confirmDelete) {\r\n            fetch('http://localhost:3000/', {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then(item => {\r\n                    this.getItems();\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"App\">\r\n                <Row>\r\n                    <Col>\r\n                        <h2>Roster</h2>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Github Organization Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"githuborg\" name=\"githuborg\" placeholder=\"thinkful-ei-animal\" onChange={this.handleChange} value={this.state.githuborg} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Cohort Number</label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"cohort\" name=\"cohort\" placeholder=\"45\" onChange={this.handleChange} value={this.state.cohort} required />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Paste Student List Here</label>\r\n                                <textarea className=\"form-control\" id=\"studentList\" rows=\"10\" name=\"studentList\" onChange={this.handleChange} value={this.state.studentList} />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <button className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)}>Load Students</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h1 style={{ margin: \"20px 0\" }}>Student Roster</h1>\r\n                    </Col>\r\n                    <Col><button className=\"btn btn-danger\" onClick={this.deleteAllStudents.bind(this)}>Clear All</button></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <DataTable students={this.state.students} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {this.state.students.length > 0 && <CSVLink\r\n                            filename={\"db.csv\"}\r\n                            color=\"primary\"\r\n                            style={{ float: \"left\", marginRight: \"10px\" }}\r\n                            className=\"btn btn-primary\"\r\n                            data={this.state.students}>\r\n                            Download CSV\r\n                        </CSVLink>}\r\n                        <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roster;\r\n","import React, { Component } from 'react'\r\nimport { Table, Button } from 'reactstrap';\r\nimport ModalForm from '../Modals/Modal'\r\n\r\nclass AttendanceTable extends Component {\r\n\r\n    deleteItem = id => {\r\n        let confirmDelete = window.confirm('Delete item forever?')\r\n        if (confirmDelete) {\r\n            fetch('https://instructor-tools-api.herokuapp.com/students', {\r\n                method: 'delete',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id\r\n                })\r\n            })\r\n                .then(response => response.json())\r\n                .then(item => {\r\n                    this.props.deleteItemFromState(id)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let items = (<tr><td>No Items</td></tr>);\r\n        if (this.props.students.length > 0) {\r\n            items = this.props.students.map(item => {\r\n                return (\r\n                    <tr key={item.id}>\r\n                        <th scope=\"row\">{item.id}</th>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.present}</td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Table responsive hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Name</th>\r\n                        <th>Present</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {items}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceTable;","import React from \"react\";\r\nimport AttendanceTable from '../Tables/AttendanceTable';\r\nimport { CSVLink } from \"react-csv\";\r\nimport { Container, Row, Col, UncontrolledDropdown } from 'reactstrap';\r\nimport ModalForm from '../Modals/Modal';\r\nimport apiUrl from '../../env'\r\nclass Attendance extends React.Component {\r\n    state = {\r\n        students: [],\r\n        attendenceRecord: [],\r\n        chat: \"\"\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.takeAttendance(this.state.chat);\r\n    }\r\n\r\n    takeAttendance(chat) {\r\n        let attendanceArray = [];\r\n        console.log(chat);\r\n        chat = chat.toLowerCase();\r\n        this.state.students.sort(function (a, b) {\r\n            return a.fname - b.fname;\r\n        });\r\n        console.log(this.state.students)\r\n        for (let i = 0; i < this.state.students.length; i++) {\r\n            let student = this.state.students[i];\r\n             let fname = student.fname.toLowerCase();\r\n             let lname = student.lname.toLowerCase();\r\n             let name = `${fname} ${lname}`;\r\n           let preferredname= student.preferredname != undefined ? student.preferredname :\"\";\r\n            if (name !== \"\") {\r\n                if (chat.includes(name) || chat.includes(fname) || chat.includes(student.fname)|| chat.includes(preferredname)) {\r\n                    attendanceArray.push({ id: student.id, name: name, present: \"x\" })\r\n                } else {\r\n                    attendanceArray.push({ id: student.id, name: name, present: \" \" })\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        console.log(attendanceArray)\r\n        this.setState({ attendenceRecord: attendanceArray });\r\n        console.log(attendanceArray);\r\n    }\r\n\r\n    addItemToState = (student) => {\r\n        this.setState(prevState => ({\r\n            students: [...prevState.students, student]\r\n        }))\r\n    }\r\n\r\n\r\n    addToDB = student => {\r\n        fetch(apiUrl, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                fname: student.fname,\r\n                lname: student.lname,\r\n                email: student.email,\r\n                asm: student.asm,\r\n                location: student.location,\r\n                slack: student.slack,\r\n                paymentplan: student.paymentplan,\r\n                cohort: student.cohort\r\n            })\r\n        }).then(response => response.json())\r\n            .then(item => {\r\n                this.getItems();\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    getItems() {\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(students => {\r\n                students.sort((a, b)=> {\r\n                    let fa = a.fname.toLowerCase(),\r\n                    fb = b.fname.toLowerCase();\r\n            \r\n                if (fa < fb) {\r\n                    return -1;\r\n                }\r\n                if (fa > fb) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n                });\r\n                console.log(students)\r\n                this.setState({ students })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n\r\n    updateState = (student) => {\r\n        const itemIndex = this.state.students.findIndex(data => data.id === student.id)\r\n        const newArray = [\r\n            // destructure all items from beginning to the indexed item\r\n            ...this.state.students.slice(0, itemIndex),\r\n            // add the updated item to the array\r\n            student,\r\n            // add the rest of the items to the array from the index after the replaced item\r\n            ...this.state.students.slice(itemIndex + 1)\r\n        ]\r\n        this.setState({ students: newArray })\r\n    }\r\n\r\n    deleteItemFromState = (id) => {\r\n        const updatedItems = this.state.students.filter(item => item.id !== id)\r\n        this.setState({ students: updatedItems })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"App\">\r\n                <Row>\r\n                    <Col>\r\n                        <h2>Attendance</h2>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Paste Chat Here</label>\r\n                                <textarea className=\"form-control\" id=\"chat\" rows=\"10\" name=\"chat\" onChange={this.handleChange} value={this.state.chat} />\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <button className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)}>Scan Chat</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <h1 style={{ margin: \"20px 0\" }}>Attendance</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <AttendanceTable students={this.state.attendenceRecord} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {this.state.attendenceRecord.length > 0 && <CSVLink\r\n                            filename={\"attendance.csv\"}\r\n                            color=\"primary\"\r\n                            style={{ float: \"left\", marginRight: \"10px\" }}\r\n                            className=\"btn btn-primary\"\r\n                            data={this.state.attendenceRecord}>\r\n                            Download CSV\r\n                      </CSVLink>}\r\n                    </Col>\r\n                </Row>\r\n            </Container>);\r\n    }\r\n}\r\n\r\nexport default Attendance;\r\n","import React from \"react\";\r\nimport { Table, Button, Container } from 'reactstrap';\r\nimport apiUrl from '../../env'\r\n\r\nclass Organization extends React.Component {\r\n    state = {\r\n        students: [],\r\n        token: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n    getItems() {\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(students => {\r\n                console.log(students);\r\n                this.setState({ students })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    inviteAll() {\r\n        let sentStudents = [];\r\n        if (this.state.students.length > 0) {\r\n            this.state.students.forEach(student => {\r\n                fetch(`https://api.github.com/orgs/${student.githuborg}/invitations?access_token=${this.state.token}`, {\r\n                    method: 'post',\r\n                    body: JSON.stringify({\r\n                        \"email\": student.email,\r\n                        \"role\": \"direct_member\"\r\n                    })\r\n                }).then(data => {\r\n                    if (data.ok) {\r\n                        console.log(student)\r\n                        student.invite = \"yes\";\r\n\r\n                    } else {\r\n                        student.invite = \"no\";\r\n                    }\r\n                    sentStudents.push(student);\r\n                    console.log(sentStudents);\r\n                    this.setState({ students: sentStudents })\r\n                }).catch((error) => {\r\n                    console.error('Error:', error);\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    inviteOne(githubOrg,email){\r\n       /* fetch(`https://api.github.com/orgs/${githubOrg}/invitations?access_token=${this.state.token}`, {\r\n            method: 'post',\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"role\": \"direct_member\"\r\n            })\r\n        }).then(data => {\r\n            if (data.ok) {\r\n                console.log(student)\r\n                student.invite = \"yes\";\r\n\r\n            } else {\r\n                student.invite = \"no\";\r\n            }\r\n            sentStudents.push(student);\r\n            console.log(sentStudents);\r\n            this.setState({ students: sentStudents })\r\n        }).catch((error) => {\r\n            console.error('Error:', error);\r\n        });*/\r\n    }\r\n\r\n    render() {\r\n        let items = (<tr><td>No Items</td></tr>);\r\n        if (this.state.students.length > 0) {\r\n            items = this.state.students.map(item => {\r\n                console.log(item)\r\n                let invite=\"\";\r\n                console.log(item.invite);\r\n                if(item.invite==\"yes\"){\r\n                    invite = (<td>{item.invite} </td>);\r\n                } else{\r\n                    invite = (<td><Button color=\"primary\" onClick={() => this.inviteOne(item)}>Resend</Button></td>);\r\n                }\r\n           \r\n                return (\r\n                    <tr key={item.id}>\r\n                        <th scope=\"row\">{item.id}</th>\r\n                        <td>{item.fname}</td>\r\n                        <td>{item.lname}</td>\r\n                        <td>{item.email}</td>\r\n                        <td>{item.cohort}</td>\r\n                        <td>{item.githuborg}</td>\r\n                        {invite}\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <Container>\r\n                <h2>Organization</h2>     <Button color=\"primary\" onClick={() => this.inviteAll()}>Invite All</Button>\r\n                <Table responsive hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>First</th>\r\n                            <th>Last</th>\r\n                            <th>Email</th>\r\n                            <th>Cohort</th>\r\n                            <th>Organization</th>\r\n                            <th>Invite Sent?</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>);\r\n    }\r\n}\r\n\r\nexport default Organization;\r\n","import React from \"react\";\r\nimport { Row, Col, Container, Button, Form, TextArea, FormGroup, Label, Input } from 'reactstrap';\r\nimport apiUrl from '../../env';\r\nclass YamlGenerator extends React.Component {\r\n    state = {\r\n        students: [],\r\n        courseCode:\"dev-301\",\r\n        cohortNum:46,\r\n        startDate:'',\r\n        workshopUrl:\"http://rebrand.ly\",\r\n        timeZone: \"EST\",\r\n        breakWeek1:6,\r\n        breakWeek2:11,\r\n        studentList:` Aaron\tDavis\r\n        Adyceum\tMagna Ccarri\r\n        Amanda\tMcCabe\r\n        Andrew\tDela Rosa\r\n        Andy\tCharles\r\n        Anthony\tOdero\r\n        Brandon\tWeiss\r\n        Bruno\tMota\r\n        Caleb\tJackson\r\n        Chad\tDrake\r\n        Chanpasong\tThipphakhinkeo\r\n        Christopher\tWhatley\r\n        Dennis\tVitery\r\n        Derek\tNellis\r\n        Devon\tReihl\r\n        Diana\tTineo\r\n        Harrison\tWinkler\r\n        Ian\tJorgensen\r\n        Jason\tStankevich\r\n        Jeffrey\tChodil\r\n        Jordan\tDoughty\r\n        Josh\tBarnes\r\n        Justin\tRehrig\r\n        Kaylena\tHall\r\n        Kory\tRodriguez\r\n        Malik\tDejean\r\n        Mariela\tMagallon\r\n        Mark\tForce\r\n        Mark\tMarcello\r\n        Marquel\tGreene\r\n        Michael\tHicks-Richardson\r\n        Michael\tSliger\r\n        Nathaniel\tGaffney\r\n        Rachel\tReilly\r\n        Richard\tScott\r\n        Russell\tChamplain\r\n        Sean\tMathis\r\n        Steven\tHenderson\r\n        Terrance\tIvyBrown\r\n        Theo\tMcCauley\r\n        Timothy\tMahoney\r\n        Trevoer\tAlt\r\n        Will\tZeiher\r\n        William\tCox\r\n        Xavier\tRitch`,\r\n        rewriteInputPath:true,\r\n        slackHandles:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n    getItems() {\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(students => {\r\n                let slackHandles = students.map(student=>student.slack)\r\n                this.setState({slackHandles:slackHandles.join(\" \")});\r\n              /*  students.sort(function(a, b) { \r\n                    return a.id - b.id ;\r\n                  });\r\n                this.setState({ students })*/\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n    onChange = e => {\r\n        console.log(e)\r\n        if(e.target.name===\"rewriteInputPath\"){\r\n            this.setState({ [e.target.name]: e.target.checked })\r\n        } else{\r\n        this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    generateYaml=e=> {\r\n        e.preventDefault();\r\n        let students = this.state.studentList.trim().replace(\"\t\", \" \").split(\"\\n\").sort();\r\n       var nameList = students.map(function (item) {\r\n            return item.trim()\r\n          });\r\n          let output = [];\r\n         for (let i = 0; i < nameList.length; i++) {\r\n             let name = nameList[i].split(\"\t\");\r\n             console.log(nameList[i],name,name.length)\r\n             if(name.length==1){\r\n                 console.log(name)\r\n                 name = name[0].split(\" \");\r\n             }\r\n             if (name.length>1) {\r\n                 let firstName = name[0];\r\n                 let lastName = name[1];\r\n                 let lastInitial = lastName[0];\r\n               //  console.log(firstName, lastInitial);\r\n             console.log(this.checkIfDups(firstName, nameList))\r\n                 if (this.checkIfDups(firstName, nameList)) {\r\n                     output[i] = `  - name: ${firstName} ${lastName}\\n     shortName: ${firstName}${lastInitial}\\n`;\r\n                 } else {\r\n                     output[i] = `  - name: ${firstName} ${lastName}\\n`;\r\n                 }\r\n             }\r\n         }\r\n         console.log(output)\r\n         this.setState({startDate:'2020-10-11',students:output})\r\n    }\r\n\r\n  \r\n    checkIfDups(firstName, list) {\r\n        let counter = 0;\r\n        console.log(firstName,list)\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                let fname = list[i];\r\n                if (fname.includes(firstName)) {\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n        return counter > 1;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2>YamlGenerator</h2>\r\n                <Form onSubmit={this.generateYaml}>\r\n                    <FormGroup>\r\n                        <Label for=\"courseCode\">Course Code</Label>\r\n                        <select id=\"courseCode\" className=\"form-control\" onChange={this.onChange} defaultValue=\"dev-301\" >\r\n                            <option value=\"dev-301\">dev-301</option>\r\n                            <option value=\"data-301\">data-301</option>\r\n                            <option value=\"data_analytics-301\">data_analytics-301</option>\r\n                            <option value=\"digital_marketing-301\">digital_marketing-301</option>\r\n                            <option value=\"project_marketing-301\">project_marketing-301</option>\r\n                            <option value=\"ux-301\">ux-301</option>\r\n                        </select>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"cohortNum\">Cohort Number</Label>\r\n                        <Input type=\"text\" name=\"cohortNum\" id=\"cohortNum\" onChange={this.onChange} defaultValue=\"46\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"startDate\">Start Date</Label>\r\n                        <Input type=\"date\" name=\"startDate\" id=\"startDate\" onChange={this.onChange} value={this.state.startDate} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"workshopUrl\">Workshop URL</Label>\r\n                        <Input type=\"url\" name=\"workshopUrl\" id=\"workshopUrl\" onChange={this.onChange} value={this.state.workshopUrl} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"timezone\">Time Zone</Label>\r\n                        <select id=\"timezone\" name=\"timezone\" className=\"form-control\"  onChange={this.onChange} value={this.state.timeZone}>\r\n                            <option value=\"PST\">PST</option>\r\n                            <option value=\"MST\">MST</option>\r\n                            <option value=\"CST\">CST</option>\r\n                            <option value=\"EST\">EST</option>\r\n                        </select>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"breakWeeks\">BreakWeeks</Label>\r\n                        <Row>\r\n                            <Col md=\"2\"><Input type=\"text\" name=\"breakWeek1\" id=\"breakWeek1\" onChange={this.onChange} value={this.state.breakWeek1 === null ? '' : this.state.breakWeek1} />\r\n                            </Col>\r\n                            <Col md=\"2\"><Input type=\"text\" name=\"breakWeek2\" id=\"breakWeek2\" onChange={this.onChange} value={this.state.breakWeek2 === null ? '' : this.state.breakWeek2} /></Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"studentList\">Student List</Label>\r\n                        <textarea className=\"form-control\" type=\"text\" name=\"studentList\" id=\"studentList\" onChange={this.onChange} value={this.state.studentList === null ? '' : this.state.studentList} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Flags</Label>\r\n                        <Row>\r\n                            <Col md=\"4\">\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"rewriteInputPath\" name=\"rewriteInputPath\" onChange={this.onChange} value={this.state.rewriteInputPath}/>\r\n                                    <Label className=\"form-check-label\" for=\"rewriteInputPath\">\r\n                                        rewriteInputPath\r\n                                </Label>\r\n                                </div></Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n\r\n                <Row>\r\n                    <Col>\r\n                    <div className=\"yaml\">\r\n                        <div>courseCode: {this.state.courseCode}</div>\r\n                        <div>cohortNumber: {this.state.cohortNum}</div>\r\n                        <div>students: <div className=\"students-yaml\">{this.state.students}</div></div>\r\n                        <div></div>\r\n                        {this.state.rewriteInputPath === true && \r\n                        <div>flags:\r\n                            <div>&nbsp;&nbsp;rewriteInputPath:</div>\r\n                            <div>&nbsp;&nbsp;&nbsp;&nbsp;from: master-syllabus</div>\r\n                            <div>&nbsp;&nbsp;&nbsp;&nbsp;to: master-syllabus-groups</div>\r\n                            \r\n                            </div>}\r\n                        <div>oddStudent: solo</div>\r\n                        <div>startDate: {this.state.startDate}</div>\r\n                        <div>workshopUrl: {this.state.workshopUrl}</div>\r\n                        <div>timezone: ET</div>\r\n                        <div>breakWeeks:</div>\r\n                        <div>&nbsp;&nbsp;&nbsp;&nbsp;- {this.state.breakWeek1}</div>\r\n                        <div>&nbsp;&nbsp;&nbsp;&nbsp;- {this.state.breakWeek2}</div>\r\n\r\n\r\n                        <div className=\"slackReminders\">\r\n                            <div><strong># Slack /remind command for morning Workshop</strong></div>\r\n                            <div># /remind #ei-cohort{this.state.cohortNum} \"It's time for our morning workshop: {this.state.workshopUrl} {this.state.slackHandles}\" at 10AM {this.state.timeZone} every weekday.</div>\r\n                            <div><strong># Slack /remind command for Lunch</strong></div>\r\n                            <div># /remind #ei-cohort{this.state.cohortNum} \"Lunch Time! {this.state.slackHandles}\" at 12:45PM {this.state.timeZone} every weekday.</div>\r\n                            <div><strong># Slack /remind command for afternoon Workshop</strong></div>\r\n                            <div># /remind #ei-cohort{this.state.cohortNum} \"It's time for our afternoon workshop: {this.state.workshopUrl} {this.state.slackHandles}\" at 1:30PM {this.state.timeZone} every weekday.</div>\r\n                            <div><strong># Slack /remind command for end of TA session</strong></div>\r\n                            <div> /remind #ei-cohort{this.state.cohortNum} \"TA support is available until 5:30 PM Eastern. Please submit tickets at least 15 minutes before EOD {this.state.slackHandles}\" at 5PM {this.state.timeZone} every weekday.</div>\r\n                        </div>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>);\r\n    }\r\n}\r\n\r\nexport default YamlGenerator;\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, Card, CardBody, CardTitle, CardText, CardHeader } from 'reactstrap';\r\nimport apiUrl from '../../env';\r\nimport \"../../../node_modules/video-react/dist/video-react.css\"; // import css\r\nimport { Player } from 'video-react';\r\nimport rubericVideo from '../../resources/view_a_ruberic(admins).mp4';\r\nclass Resources extends React.Component {\r\n    state = {\r\n        students: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n\r\n    generateYaml(e) {\r\n        e.preventDefault();\r\n        console.log(\"generating\");\r\n\r\n    }\r\n\r\n    getItems() {\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(students => {\r\n                console.log(students);\r\n                this.setState({ students })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2>Helpful Instructor Resources</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>Points of Contact</CardHeader>\r\n                            <CardBody>\r\n                                <CardTitle tag='h5'>Careers</CardTitle>\r\n                                <CardText>Emma Holland (@Emma Holland) Synchronous Programs Operations Manager</CardText>\r\n                                <CardTitle tag='h5'>Interviews</CardTitle>\r\n                                <CardText>Derrick Foust (@Derrick Foust) Senior Educator Success Manager</CardText>\r\n                                <CardTitle tag='h5'>TA Staffing</CardTitle>\r\n                                <CardText>Kelly Kawa (@Kelly Kawa) Senior Educator Experience Manager</CardText>\r\n                                <CardTitle tag='h5'>Syllabus Generation</CardTitle>\r\n                                <CardText>Joe Turner (@Joe Turner) Lead Instructor</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>Useful Links</CardHeader>\r\n                            <CardBody>\r\n                                <CardText>\r\n                                    <div><a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1SLQIdtcTj6qNUxcZeHdfMe4C7yHqGglxyIxnJ8HjtCU/edit?ts=5ef21b9d#gid=955836459\">Student Roster</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://ftgen-trigger.herokuapp.com/\">Syllabus Generator</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1p0mXIIIC68RCw4UgXLt3Z-ZsyY2eHM3XRlEqXv6ikX8/edit?ts=5ef21b21#gid=168336559\">Cohort Staffing</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://thinkful-ed.github.io/ei-cohort-start-checklist/\">Cohort Launch Checklist1 (EI)</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://docs.google.com/document/d/129sZIHXy6HepYzxIeELAyU59L7RxaUNaqg9OtACYGLc/edit#\">Cohort Launch Checklist2 (EI)</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://github.com/Thinkful-Ed/ei-shopping-list-solutions\">Shopping List Starter Repo (EI)</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://thinkful.slides.com/users/sign_in\">Slides</a></div>\r\n                                    <div><a target=\"_blank\" href=\"https://chegg-my.sharepoint.com/:f:/p/tauhida/EgpyabZsgy5Mhz8yuIBwc4IBahNn7lrwA366oyVmQ4NOlQ?e=CeunqK\">Student Health Docs</a></div>\r\n\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>Grading Ruberics</CardHeader>\r\n                            <CardBody>\r\n                                <CardTitle tag='h5'>How to View a Ruberic</CardTitle>\r\n                                <CardText>\r\n                                    <Player\r\n                                        playsInline\r\n                                        // poster=\"/assets/poster.png\"\r\n                                        src={rubericVideo}\r\n                                    />\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardHeader>How to Impersonate a Student</CardHeader>\r\n                            <CardBody>\r\n                                <CardTitle tag='h5'>Impersonate a student to see checkpoint submissions</CardTitle>\r\n                                <CardText>(find student email from their dashboard) <p>How to impersonate a student: <a href=\"https://accounts.thinkful.com/admin/impersonate/student_email\">Impersonate</a></p>\r\n                                    <p>Make sure you unimpersonate after you are done\r\n                                    <a href=\"https://accounts.thinkful.com/admin/unimpersonate\">Unimpersonate</a></p>\r\n                                </CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                </Row>\r\n            </Container>);\r\n    }\r\n}\r\n\r\nexport default Resources;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Roster from './components/Roster/Roster';\nimport Attendance from './components/Attendance/Attendance';\nimport Organization from './components/Organization/Organization';\nimport YamlGenerator from './components/YamlGenerator/YamlGenerator';\nimport Resources from './components/Resources/Resources';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light  justify-content-between\">\n          <a className=\"navbar-brand\" href=\"/\">Thinkful Instructor Apps</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/\">Roster</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/yaml\">Yaml File Generator</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/attendance\">Attendance Taker</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/organization\">Github Org Invite Sender</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/resources\">Resources</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/yaml\">\n            <YamlGenerator />\n          </Route>\n          <Route path=\"/attendance\">\n           <Attendance />\n          </Route>\n          <Route path=\"/organization\">\n           <Organization />\n          </Route>\n          <Route path=\"/resources\">\n           <Resources />\n          </Route>\n          <Route path=\"/\">\n            <Roster />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/view_a_ruberic(admins).e21a7e92.mp4\";"],"sourceRoot":""}