{"version":3,"sources":["env.js","components/Forms/AddEditForm.js","components/Modals/Modal.js","components/Tables/DataTable.js","components/Roster/Roster.js","components/Tables/AttendanceTable.js","components/Attendance/Attendance.js","components/Organization/Organization.js","components/YamlGenerator/YamlGenerator.js","components/Resources/Resources.js","components/TicketCounter/TicketCounter.js","components/TeamGenerator/TeamGenerator.js","App.js","serviceWorker.js","index.js","resources/avoid-example.png","resources/view_a_ruberic(admins).mp4"],"names":["apiUrl","AddEditForm","state","id","fname","lname","email","asm","location","slack","paymentplan","cohort","githuborg","preferredname","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","item","Array","isArray","props","addItemToState","toggle","catch","err","submitFormEdit","updateState","this","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","Button","React","Component","ModalForm","prevState","modal","closeBtn","className","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","students","length","map","key","scope","width","Table","responsive","hover","AttendanceTable","present","Attendance","classRoster","attendenceRecord","report","roster","absences","handleChange","student","itemIndex","findIndex","data","newArray","slice","updatedItems","filter","event","formattedRoster","getItems","toLowerCase","takeAttendance","attendanceArray","notificationArr","sort","includes","push","names","replace","split","idx","studentStatement","Container","Row","Col","rows","display","justifyContent","disabled","handleSubmit","bind","margin","filename","Organization","token","error","sentStudents","forEach","setTimeout","ok","invite","inviteOne","role","inviteAll","YamlGenerator","courseCode","cohortNum","startDate","workshopUrl","timeZone","breakWeek1","breakWeek2","studentList","rewriteInputPath","slackHandles","organization","checked","generateYaml","nameList","trim","output","i","firstName","lastName","lastInitial","checkIfDups","Date","toLocaleDateString","month","day","year","formattedDate","parseInt","substring","join","list","counter","defaultValue","md","src","avoidExample","alt","Resources","Card","CardHeader","CardBody","CardTitle","tag","CardText","rel","href","playsInline","rubericVideo","TicketCounter","tickets","requests","chat","parseStudents","ticketsArr","ticketSenders","ticket","request","TeamGenerator","groups","discordUrl","studentRoster","numPerGroup","firstNames","shuffle","numOfTeams","Math","ceil","createGroups","lastGroup","pop","arr","numGroups","perGroup","fill","_","array","randomIndex","currentIndex","floor","random","index","App","basename","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","to","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.a6a3f21e.chunk.js","sourcesContent":["const prodUrl = \"https://instructor-tools-api.herokuapp.com/students\";\nconst devUrl = \"http://localhost:3000/students\";\n\n\nlet apiUrl = prodUrl;\n\nexport default apiUrl;","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport apiUrl from '../../env'\n\nclass AddEditForm extends React.Component {\n  state = {\n    id: '',\n    fname:'', lname:'', email:'', asm:'', location:'', slack:'', paymentplan:'', cohort:'',githuborg:'',preferredname:''\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  submitFormAdd = e => {\n    e.preventDefault();\n    console.log(this.state);\n    fetch(apiUrl, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fname: this.state.fname,\n        lname: this.state.lname,\n        preferredname: this.state.preferredname,\n        email: this.state.email,\n        asm: this.state.asm,\n        location: this.state.location,\n        slack: this.state.slack,\n        paymentplan: this.state.paymentplan,\n        cohort: this.state.cohort,\n        githuborg:this.state.githuborg\n      })\n    })\n      .then(response => response.json())\n      .then(item => {\n        if(Array.isArray(item)) {\n          this.props.addItemToState(item[0])\n          this.props.toggle()\n        } else {\n          console.log('failure')\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  submitFormEdit = e => {\n    e.preventDefault()\n    console.log(\"Before Update\",this.state);\n    fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id:this.state.id,\n        fname: this.state.fname,\n        lname: this.state.lname,\n        preferredname: this.state.preferredname,\n        email: this.state.email,\n        asm: this.state.asm,\n        location: this.state.location,\n        slack: this.state.slack,\n        paymentplan: this.state.paymentplan,\n        cohort: this.state.cohort,\n        githuborg:this.state.githuborg\n      })\n    })\n      .then(response => response.json())\n      .then(item => {\n            console.log(\"After update\",item)\n        if(Array.isArray(item)) {\n         \n          this.props.updateState(item[0])\n          this.props.toggle()\n        } else {\n          console.log('failure')\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  componentDidMount(){\n    // if item exists, populate the state with proper data\n    console.log(this.props.item)\n    if(this.props.item){\n      const { id, fname, lname, email, asm, location, slack, paymentplan, cohort,githuborg,preferredname } = this.props.item\n      this.setState({ id,fname, lname, email, asm, location, slack, paymentplan, cohort,githuborg,preferredname })\n    }\n  }\n\n  render() {\n   // console.log(this.state)\n    return (\n      <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n        <FormGroup>\n          <Label for=\"first\">First Name</Label>\n          <Input type=\"text\" name=\"fname\" id=\"first\" onChange={this.onChange} value={this.state.fname === null ? '' : this.state.fname} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"last\">Last Name</Label>\n          <Input type=\"text\" name=\"lname\" id=\"last\" onChange={this.onChange} value={this.state.lname === null ? '' : this.state.lname}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">PreferredName</Label>\n          <Input type=\"text\" name=\"preferredname\" id=\"preferredname\" onChange={this.onChange} value={this.state.preferredname === null ? '' : this.state.preferredname}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phone\">ASM</Label>\n          <Input type=\"text\" name=\"asm\" id=\"phone\" onChange={this.onChange} value={this.state.asm === null ? '' : this.state.asm}  placeholder=\"Suzy Smith\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"location\">Location</Label>\n          <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"hobby\">Slack</Label>\n          <Input type=\"text\" name=\"slack\" id=\"hobby\" onChange={this.onChange} value={this.state.slack}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"payment\">Payment Type</Label>\n          <Input type=\"text\" name=\"paymentplan\" id=\"payment\" onChange={this.onChange} value={this.state.paymentplan}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"cohort\">Cohort</Label>\n          <Input type=\"text\" name=\"cohort\" id=\"cohort\" onChange={this.onChange} value={this.state.cohort}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"cohort\">Github Organization</Label>\n          <Input type=\"text\" name=\"githuborg\" id=\"githuborg\" onChange={this.onChange} value={this.state.githuborg}  />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default AddEditForm;","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport AddEditForm from '../Forms/AddEditForm';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modal: false\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\n\n      const label = this.props.buttonLabel\n\n      let button = ''\n      let title = ''\n\n      if(label === 'Edit'){\n        button = <Button\n                  color=\"warning\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Edit Item'\n      } else {\n        button = <Button\n                  color=\"success\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Add New Item'\n      }\n\n\n      return (\n      <div>\n        {button}\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\n          <ModalBody>\n            <AddEditForm\n              addItemToState={this.props.addItemToState}\n              updateState={this.props.updateState}\n              toggle={this.toggle}\n              item={this.props.item} />\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ModalForm","import React, { Component } from 'react'\nimport { Table, Button } from 'reactstrap';\nimport ModalForm from '../Modals/Modal';\nimport apiUrl from '../../env';\n\nclass DataTable extends Component {\n\n    deleteItem = id => {\n        let confirmDelete = window.confirm('Delete item forever?')\n        if (confirmDelete) {\n            fetch(apiUrl, {\n                method: 'delete',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id\n                })\n            })\n                .then(response => response.json())\n                .then(item => {\n                    this.props.deleteItemFromState(id)\n                })\n                .catch(err => console.log(err))\n        }\n\n    }\n\n    render() {\n        let items = (<tr><td>No Items</td></tr>);\n        if (this.props.students.length > 0) {\n            items = this.props.students.map(item => {\n             //   console.log(item)\n                return (\n                    <tr key={item.id}>\n                        <th scope=\"row\">{item.id}</th>\n                        <td>{item.fname}</td>\n                        <td>{item.lname}</td>\n                        <td>{item.preferredname}</td>\n                        <td>{item.email}</td>\n                        <td>{item.slack}</td>\n                        <td>{item.cohort}</td>\n                        <td>\n                            <div style={{ width: \"110px\" }}>\n                                <ModalForm buttonLabel=\"Edit\" item={item} updateState={this.props.updateState} />\n                                {' '}\n                                <Button color=\"danger\" onClick={() => this.deleteItem(item.id)}>Del</Button>\n                            </div>\n                        </td>\n                    </tr>\n                )\n            })\n        }\n\n        return (\n            <Table responsive hover>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>First</th>\n                        <th>Last</th>\n                        <th>Preferred Name</th>\n                        <th>Email</th>\n                        <th>Slack</th>\n                        <th>Cohort</th>\n                        <th>Modify</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items}\n                </tbody>\n            </Table>\n        )\n    }\n}\n\nexport default DataTable","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from '../Modals/Modal';\nimport DataTable from '../Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport apiUrl from '../../env';\n\nclass Roster extends React.Component {\n\n    state = {\n        students: [],\n        studentList: '',\n        cohort: '',\n        githuborg: ''\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.parseStudents(this.state.studentList);\n    }\n\n    parseStudents(students) {\n        let studentsArr = students.replace(/\\t/g, \",\").split(\"\\n\");\n        let { cohort, githuborg } = this.state;\n        let formattedStudents = [];\n        for (let i = 0; i < studentsArr.length; i++) {\n            let arr = studentsArr[i].split(\",\");          \n            let email = arr[3];\n             let studentObj =\n            {\n                fname: arr[0],\n                lname: arr[1],                \n                slack: arr[4],\n                email: email,\n                cohort: cohort,\n                githuborg: githuborg\n            };\n            formattedStudents.push(studentObj);\n        }\n        console.log(formattedStudents);\n        formattedStudents.sort((a, b) => {\n            var textA = a.fname.toUpperCase();\n            var textB = b.fname.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        });\n        \n        formattedStudents.forEach(student => {\n            this.addToDB(student);\n        })\n\n    }\n\n    addItemToState = (student) => {\n        this.setState(prevState => ({\n            students: [...prevState.students, student]\n        }))\n    }\n\n\n    addToDB = student => {\n        fetch(apiUrl, {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                fname: student.fname,\n                lname: student.lname,\n                preferredname: student.preferredname,\n                email: student.email,\n                asm: student.asm,\n                location: '',\n                slack: student.slack,\n                paymentplan: student.paymentplan,\n                cohort: student.cohort,\n                githuborg: student.githuborg\n            })\n        }).then(response => response.json())\n            .then(item => {\n                this.getItems();\n            })\n            .catch(err => console.log(err))\n    }\n\n    getItems() {\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(students => {\n                 console.log(students);\n                if (students.length>0) {\n                    students.sort(function (a, b) {\n                        return a.id - b.id;\n                    });\n                    this.setState({ students })\n                }\n\n            })\n            .catch(err => console.log(\"Error:\",err))\n    }\n\n\n\n    updateState = (student) => {\n        console.log(student);\n        const itemIndex = this.state.students.findIndex(data => data.id === student.id)\n        const newArray = [\n            // destructure all items from beginning to the indexed item\n            ...this.state.students.slice(0, itemIndex),\n            // add the updated item to the array\n            student,\n            // add the rest of the items to the array from the index after the replaced item\n            ...this.state.students.slice(itemIndex + 1)\n        ]\n        this.setState({ students: newArray })\n    }\n\n    deleteItemFromState = (id) => {\n        const updatedItems = this.state.students.filter(item => item.id !== id)\n        this.setState({ students: updatedItems })\n    }\n\n    deleteAllStudents = () => {\n\n        let confirmDelete = window.confirm('Delete all Students?')\n        if (confirmDelete) {\n\n            fetch(`${apiUrl}/all`, {\n                method: 'delete',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n\n            })\n                .then(response => response.json())\n                .then(item => {\n                    this.getItems();\n                })\n                .catch(err => console.log(err))\n\n\n        }\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    componentWillUnmount() {\n\n    }\n\n\n    render() {\n        return (\n            <Container fluid className=\"App\">\n                <Row>\n                    <Col>\n                        <h2>Roster</h2>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Github Organization Name</label>\n                                <input type=\"text\" className=\"form-control\" id=\"githuborg\" name=\"githuborg\" placeholder=\"thinkful-ei-animal\" onChange={this.handleChange} value={this.state.githuborg} required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Cohort Number</label>\n                                <input type=\"number\" className=\"form-control\" id=\"cohort\" name=\"cohort\" placeholder=\"45\" onChange={this.handleChange} value={this.state.cohort} required />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Paste Student List Here (<a href=\"https://chegg-my.sharepoint.com/:x:/p/emma/EVfx_RaoHJ5Gh0bqFEfogOMBd3G7MwjOeqfg-s0GxUt2qQ?e=QS567v\" target=\"_blank\">Student Roster</a>)</label>\n                                <textarea className=\"form-control\" id=\"studentList\" rows=\"10\" name=\"studentList\" onChange={this.handleChange} value={this.state.studentList} />\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-10\">\n                                    <button className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)}>Load Students</button>\n                                </div>\n                            </div>\n                        </form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <h1 style={{ margin: \"20px 0\" }}>Student Roster</h1>\n                    </Col>\n                    <Col><button className=\"btn btn-danger\" onClick={this.deleteAllStudents.bind(this)}>Clear All</button></Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <DataTable students={this.state.students} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        {this.state.students.length > 0 && <CSVLink\n                            filename={\"db.csv\"}\n                            color=\"primary\"\n                            style={{ float: \"left\", marginRight: \"10px\" }}\n                            className=\"btn btn-primary\"\n                            data={this.state.students}>\n                            Download CSV\n                        </CSVLink>}\n                        <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState} />\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default Roster;\n","import React, { Component } from 'react'\nimport { Table} from 'reactstrap';\n\nclass AttendanceTable extends Component {\n\n    deleteItem = id => {\n        let confirmDelete = window.confirm('Delete item forever?')\n        if (confirmDelete) {\n            fetch('https://instructor-tools-api.herokuapp.com/students', {\n                method: 'delete',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    id\n                })\n            })\n                .then(response => response.json())\n                .then(item => {\n                    this.props.deleteItemFromState(id)\n                })\n                .catch(err => console.log(err))\n        }\n\n    }\n\n    render() {\n        let items = (<tr><td>No Items</td></tr>);\n        if (this.props.students.length > 0) {\n            items = this.props.students.map(item => {\n                return (\n                    <tr key={item.id}>\n                        <th scope=\"row\">{item.id}</th>\n                        <td>{item.name}</td>\n                        <td>{item.present}</td>\n                    </tr>\n                )\n            })\n        }\n\n        return (\n            <Table responsive hover>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Present</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {items}\n                </tbody>\n            </Table>\n        )\n    }\n}\n\nexport default AttendanceTable;","import React from \"react\";\nimport AttendanceTable from \"../Tables/AttendanceTable\";\nimport { CSVLink } from \"react-csv\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport apiUrl from \"../../env\";\n//import * as moment from 'moment';\nclass Attendance extends React.Component {\n  state = {\n    students: [],\n    classRoster: [],\n    attendenceRecord: [],\n    report: \"\",\n    roster: \"\",\n    absences: [],\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({absences:''})\n    let formattedRoster = this.getItems(this.state.roster.toLowerCase())\n    this.takeAttendance(formattedRoster);\n\n  }\n\n  takeAttendance(roster) {\n    let attendanceArray = [],notificationArr=[];\n    roster.sort()\n    console.log(roster);\n    let id=0;\n    for (let student of roster) {\n      if (this.state.report.toLowerCase().includes(student)) {\n        attendanceArray.push({id:id++, name: student, present: \"x\" });\n      } else {\n        attendanceArray.push({ id:id++,name: student, present: \" \" });\n        notificationArr.push(student);\n      }\n    }\n   this.setState({\n      attendenceRecord: attendanceArray,\n      absences: notificationArr,\n    });\n  }\n\n  getItems(names) {\n    console.log(typeof names)\n    let classRoster = names.replace(/\\t/g, \" \").split(\"\\n\");\n\n    this.setState({ classRoster });\n    return classRoster;\n  }\n\n  updateState = (student) => {\n    const itemIndex = this.state.students.findIndex(\n      (data) => data.id === student.id\n    );\n    const newArray = [\n      // destructure all items from beginning to the indexed item\n      ...this.state.students.slice(0, itemIndex),\n      // add the updated item to the array\n      student,\n      // add the rest of the items to the array from the index after the replaced item\n      ...this.state.students.slice(itemIndex + 1),\n    ];\n    this.setState({ students: newArray });\n  };\n\n  deleteItemFromState = (id) => {\n    const updatedItems = this.state.students.filter((item) => item.id !== id);\n    this.setState({ students: updatedItems });\n  };\n\n  componentDidMount() {\n    //this.getItems();\n  }\n\n  componentWillUnmount() { }\n\n  render() {\n    let absences = \"\";\n    let students = \"\";\n    if (this.state.absences.length > 0) {\n      console.log(this.state.absences);\n      students = this.state.absences.map((item, idx) => {\n        //  console.log(item)\n        let studentStatement = `@${item} Please submit an absence request for today's session. http://bit.ly/AbsenceRequests`;\n        return <div key={idx}>{studentStatement}</div>;\n      });\n    }\n\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n            <h2>Attendance</h2>\n            <form>\n              <Row>\n                <Col>\n                <div className=\"form-group\">\n                  <label>Paste Class Roster Here (Student Health Sheet)</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"roster\"\n                    rows=\"10\"\n                    name=\"roster\"\n                    onChange={this.handleChange}\n                    value={this.state.roster}\n                  />\n                </div></Col>\n                <Col>\n                  <div className=\"form-group\">\n                    <label>Paste Zoom Report Here</label>\n                    <textarea\n                      className=\"form-control\"\n                      id=\"report\"\n                      rows=\"10\"\n                      name=\"report\"\n                      onChange={this.handleChange}\n                      value={this.state.report}\n                    /></div></Col>\n              </Row>\n\n\n              <div className=\"form-group row\" >\n                <div className=\"col-md-12\" style={{display:'flex',justifyContent:'center'}}>\n                  <button disabled={this.state.roster=='' && this.state.report==''}\n                    className=\"btn btn-primary\"\n                    onClick={this.handleSubmit.bind(this)}\n                  >\n\n                    Take Attendance\n                  </button>\n                  \n                </div>\n              </div>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5 style={{ margin: \"20px 0\" }}>Absence Notifications</h5>\n            <div>\n              <strong>For Staff Slack Channel</strong>\n            </div>\n            {absences}\n            <div>\n              <strong>For Student Slack Channel</strong>\n            </div>\n            {students}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5 style={{ margin: \"20px 0\" }}>Attendance</h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <AttendanceTable\n              students={this.state.attendenceRecord}\n              updateState={this.updateState}\n              deleteItemFromState={this.deleteItemFromState}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {this.state.attendenceRecord.length > 0 && (\n              <CSVLink\n                filename={\"attendance.csv\"}\n                color=\"primary\"\n                style={{ float: \"left\", marginRight: \"10px\" }}\n                className=\"btn btn-primary\"\n                data={this.state.attendenceRecord}\n              >\n                Download CSV\n              </CSVLink>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Attendance;\n","import React from \"react\";\nimport { Table, Button, Container, FormGroup, Label, Input } from 'reactstrap';\nimport apiUrl from '../../env';\n//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\nclass Organization extends React.Component {\n    state = {\n        students: [],\n        token: '', \n        error:''\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n    getItems() {\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(students => {\n                console.log(students);\n                this.setState({ students })\n            })\n            .catch(err => console.log(err))\n    }\n\n    componentWillUnmount() {\n\n    }\n    onChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    inviteAll() {\n        let sentStudents = [];\n        console.log(this.state)\n        if (this.state.students.length > 0 && this.state.token !== '') {\n            this.state.students.forEach(student => {\n                setTimeout(()=>{\n                fetch(`https://api.github.com/orgs/${student.githuborg}/invitations`, {\n                     method: 'post',\n                     headers:{\n                        'Authorization': `token ${this.state.token}`,\n                        'accept':'application/vnd.github.v3+json'\n                    },\n                     body: JSON.stringify({\n                         \"email\": student.email,\n                         \"role\": \"direct_member\",\n                         \"org\": `${student.githuborg}`\n                     })\n                 }).then(data => {\n                     if (data.ok) {\n                         console.log(student)\n                         student.invite = \"yes\";\n \n                     } else {\n                         student.invite = \"no\";\n                     }\n                     sentStudents.push(student);\n                     console.log(sentStudents);\n                     this.setState({ students: sentStudents })\n                 }).catch((error) => {\n                     console.error('Error:', error);\n                 });\n                },1000);\n            })\n        } else{\n            this.setState({error:\"Please Enter your github Token\"})\n        }\n    }\n\n    inviteOne(student) {\n        let sentStudents = [];\n        fetch(`https://api.github.com/orgs/${student.githuborg}/invitations`, {\n            method: 'post',\n            headers:{\n                'Authorization': `token ${this.state.token}`\n            },\n            body: JSON.stringify({\n                \"email\": student.email,\n                \"role\": \"direct_member\"\n            })\n        }).then(data => {\n            if (data.ok) {\n                console.log(student)\n                student.invite = \"yes\";\n\n            } else {\n                student.invite = \"no\";\n            }\n            sentStudents.push(student);\n            //console.log(sentStudents);\n         //   this.setState({ students: sentStudents })\n        }).catch((error) => {\n            console.error('Error:', error);\n        });\n    }\n\n    render() {\n        let items = (<tr><td>No Items</td></tr>);\n        if (this.state.students.length > 0) {\n            items = this.state.students.map(item => {\n                console.log(item)\n                let invite = \"\";\n                console.log(item.invite);\n                if (item.invite === \"yes\") {\n                    invite = (<td>{item.invite} </td>);\n                } else {\n                    invite = (<td><Button color=\"primary\" onClick={() => this.inviteOne(item)}>Resend</Button></td>);\n                }\n\n                return (\n                    <tr key={item.id}>\n                        <th scope=\"row\">{item.id}</th>\n                        <td>{item.fname}</td>\n                        <td>{item.lname}</td>\n                        <td>{item.email}</td>\n                        <td>{item.cohort}</td>\n                        <td>{item.githuborg}</td>\n                        {invite}\n                    </tr>\n                )\n            })\n        }\n        return (\n            <Container>\n                <h2>Organization</h2>\n                <FormGroup>\n                    <Label for=\"token\">Github Token</Label>\n                    <Input type=\"text\" name=\"token\" id=\"token\" onChange={this.onChange} value={this.state.token} />\n                </FormGroup>\n                {this.state.error !== '' && \n                <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.error}\n                </div>\n                }\n                <Button color=\"primary\" onClick={() => this.inviteAll()}>Invite All</Button>\n                <Table responsive hover>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>First</th>\n                            <th>Last</th>\n                            <th>Email</th>\n                            <th>Cohort</th>\n                            <th>Organization</th>\n                            <th>Invite Sent?</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </Table>\n            </Container>);\n    }\n}\n\nexport default Organization;\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport apiUrl from \"../../env\";\nimport avoidExample from \"../../resources/avoid-example.png\";\nclass YamlGenerator extends React.Component {\n  state = {\n    students: [],\n    courseCode: \"dev-301\",\n    cohortNum: 58,\n    startDate: \"\",\n    workshopUrl: \"https://rebrand.ly/${workshop\",\n    timeZone: \"EST\",\n    breakWeek1: 5,\n    breakWeek2: 13,\n    studentList: ` `,\n    rewriteInputPath: true,\n    slackHandles: \"\",\n    organization: \"\",\n  };\n\n  componentDidMount() {\n    this.getItems();\n    this.setState({\n      workshopUrl: `https://rebrand.ly/${this.state.cohortNum}workshop`,\n    });\n  }\n  getItems() {\n    fetch(apiUrl)\n      .then((response) => response.json())\n      .then((students) => {\n        let slackHandles = students.map((student) => student.slack);\n        this.setState({ slackHandles: slackHandles.join(\" \") });\n        /*  students.sort(function(a, b) { \n                    return a.id - b.id ;\n                  });\n                this.setState({ students })*/\n      })\n      .catch((err) => console.log(err));\n  }\n\n  componentWillUnmount() {}\n  onChange = (e) => {\n    console.log(e);\n    if (e.target.name === \"rewriteInputPath\") {\n      this.setState({ [e.target.name]: e.target.checked });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  };\n\n  generateYaml = (e) => {\n    console.log(this.state.startDate);\n    e.preventDefault();\n    let students = this.state.studentList\n      .trim()\n      .replace(\"\t\", \" \")\n      .split(\"\\n\")\n      .sort();\n    var nameList = students.map(function (item) {\n      return item.trim();\n    });\n    let output = [];\n    for (let i = 0; i < nameList.length; i++) {\n      let name = nameList[i].split(\"\t\");\n      console.log(nameList[i], name, name.length);\n      if (name.length === 1) {\n        name = name[0].split(\" \");\n      }\n      if (name.length > 1) {\n        let firstName = name[0];\n        let lastName = name[1];\n        let lastInitial = lastName[0];\n        if (this.checkIfDups(firstName, nameList)) {\n          output[\n            i\n          ] = `  - name: ${firstName} ${lastName}\\n     shortName: ${firstName}${lastInitial}\\n`;\n        } else {\n          output[i] = `  - name: ${firstName} ${lastName}\\n`;\n        }\n      }\n    }\n    console.log(output);\n    let date= new Date(this.state.startDate);\n    let [month, day, year] = new Date(this.state.startDate).toLocaleDateString(\"en-US\").split(\"/\");\n    let formattedDate = `${month-10? '0'+month: month}-${parseInt(day)+1}-${year.substring(2)}`;\n    console.log(formattedDate)\n    this.setState({ students: output, startDate:formattedDate });\n  };\n\n  checkIfDups(firstName, list) {\n    let counter = 0;\n    console.log(firstName, list);\n    if (list) {\n      for (let i = 0; i < list.length; i++) {\n        let fname = list[i];\n        if (fname.includes(firstName)) {\n          counter++;\n        }\n      }\n    }\n    return counter > 1;\n  }\n\n  render() {\n    return (\n      <Container>\n        <h2>YamlGenerator</h2>\n        <Form onSubmit={this.generateYaml}>\n          <FormGroup>\n            <Label for=\"courseCode\">Course Code</Label>\n            <select\n              id=\"courseCode\"\n              name=\"courseCode\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              defaultValue=\"dev-301\"\n            >\n              <option value=\"dev-301\">dev-301</option>\n              <option value=\"data-301\">data-301</option>\n              <option value=\"data_analytics-301\">data_analytics-301</option>\n              <option value=\"digital_marketing-301\">\n                digital_marketing-301\n              </option>\n              <option value=\"project_marketing-301\">\n                project_marketing-301\n              </option>\n              <option value=\"ux-301\">ux-301</option>\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"cohortNum\">Cohort Number</Label>\n            <Input\n              type=\"text\"\n              name=\"cohortNum\"\n              id=\"cohortNum\"\n              onChange={this.onChange}\n              defaultValue=\"58\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"organization\">Organization</Label>\n            <Input\n              type=\"text\"\n              name=\"organization\"\n              id=\"organization\"\n              onChange={this.onChange}\n              defaultValue=\"falcon\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"startDate\">Start Date</Label>\n            <Input\n              type=\"date\"\n              name=\"startDate\"\n              id=\"startDate\"\n              onChange={this.onChange}\n              value={this.state.startDate}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"workshopUrl\">Workshop URL</Label>\n            <Input\n              type=\"url\"\n              name=\"workshopUrl\"\n              id=\"workshopUrl\"\n              onChange={this.onChange}\n              value={this.state.workshopUrl}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"timezone\">Time Zone</Label>\n            <select\n              id=\"timezone\"\n              name=\"timezone\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              value={this.state.timeZone}\n            >\n              <option value=\"PST\">PST</option>\n              <option value=\"MST\">MST</option>\n              <option value=\"CST\">CST</option>\n              <option value=\"EST\">EST</option>\n            </select>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"breakWeeks\">BreakWeeks</Label>\n            <Row>\n              <Col md=\"2\">\n                <Input\n                  type=\"text\"\n                  name=\"breakWeek1\"\n                  id=\"breakWeek1\"\n                  onChange={this.onChange}\n                  value={\n                    this.state.breakWeek1 === null ? \"\" : this.state.breakWeek1\n                  }\n                />\n              </Col>\n              <Col md=\"2\">\n                <Input\n                  type=\"text\"\n                  name=\"breakWeek2\"\n                  id=\"breakWeek2\"\n                  onChange={this.onChange}\n                  value={\n                    this.state.breakWeek2 === null ? \"\" : this.state.breakWeek2\n                  }\n                />\n              </Col>\n            </Row>\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"studentList\">Student List</Label>\n            <textarea\n              className=\"form-control\"\n              type=\"text\"\n              name=\"studentList\"\n              id=\"studentList\"\n              onChange={this.onChange}\n              value={\n                this.state.studentList === null ? \"\" : this.state.studentList\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label>Flags</Label>\n            <Row>\n              <Col md=\"4\">\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"rewriteInputPath\"\n                    name=\"rewriteInputPath\"\n                    onChange={this.onChange}\n                    value={this.state.rewriteInputPath}\n                  />\n                  <Label className=\"form-check-label\" for=\"rewriteInputPath\">\n                    rewriteInputPath\n                  </Label>\n                </div>\n              </Col>\n            </Row>\n          </FormGroup>\n          <Button>Submit</Button>\n        </Form>\n\n        <Row>\n          <Col>\n            <div className=\"yaml\">\n              <div>courseCode: {this.state.courseCode}</div>\n              <div>cohortNumber: {this.state.cohortNum}</div>\n              <div>\n                students:{\" \"}\n                <div className=\"students-yaml\">{this.state.students}</div>\n              </div>\n              <div></div>\n              {/*this.state.rewriteInputPath === true && (\n                <div>\n                  flags:\n                  <div>&nbsp;&nbsp;rewriteInputPath:</div>\n                  <div>&nbsp;&nbsp;&nbsp;&nbsp;from: master-syllabus</div>\n                  <div>&nbsp;&nbsp;&nbsp;&nbsp;to: master-syllabus-groups</div>\n                </div>\n              )*/}\n              <div>oddStudent: solo</div>\n              <div>startDate: {this.state.startDate}</div>\n              <div>workshopUrl: {this.state.workshopUrl}</div>\n              <div>timezone: ET</div>\n              <div>breakWeeks:</div>\n              <div>&nbsp;&nbsp;&nbsp;&nbsp;- {this.state.breakWeek1}</div>\n              <div>&nbsp;&nbsp;&nbsp;&nbsp;- {this.state.breakWeek2}</div>\n\n              <div className=\"slackReminders\">\n                <div>\n                  <strong># Slack /remind command for morning Workshop</strong>\n                </div>\n                <div>\n                  # /remind #ei-{this.state.startDate} \"Morning workshop\n                  starting in 10 minutes - {this.state.workshopUrl}\" at 9:50AM{\" \"}\n                  {this.state.timeZone} every weekday.\n                </div>\n                <div>\n                  <strong># Slack /remind command for Lunch</strong>\n                </div>\n                <div>\n                  # /remind #ei-{this.state.startDate} \"Lunch Time!\" at 12:45PM{\" \"}\n                  {this.state.timeZone} every weekday.\n                </div>\n                <div>\n                  <strong>\n                    # Slack /remind command for afternoon Workshop\n                  </strong>\n                </div>\n                <div>\n                  # /remind #ei-{this.state.startDate} \"Afternoon session\n                  starting in 10 minutes - {this.state.workshopUrl}\" at 1:20PM{\" \"}\n                  {this.state.timeZone} every weekday\n                </div>\n                <div>\n                  <strong># Slack /remind command for end of TA session</strong>\n                </div>\n                <div>\n                  # /remind #ei-{this.state.startDate} \"TA support is available\n                  until 5 PM Eastern. Please submit tickets at least 15\n                  minutes before EOD\" at 4:30PM {this.state.timeZone} every\n                  weekday\n                </div>\n                <div>\n                  <strong>\n                    # Slack /remind command for end of TA session for Support\n                    Channel\n                  </strong>\n                </div>\n                <div>\n                  # /remind #support-ei-cohort{this.state.cohortNum} \"Support is\n                  finished for the day, but you can still get help from\n                  THINKCHAT using each checkpoint in your curriculum\" at 5PM{\" \"}\n                  {this.state.timeZone} every weekday\n                </div>\n              </div>\n              <div className=\"welcome\">\n                <p>Hello and welcome to Engineering Immersion!</p>\n                <p>\n                  I will be your instructor for the first 6 weeks of your\n                  program. The first week of your syllabus has now been posted,\n                  and you may find it by looking at your student dashboards.\n                  Please pay special attention to all items posted on Sunday's\n                  dashboard, including opening and reading the absence form\n                  which contains details of Thinkful's absence policy throughout\n                  your course. Also, please read through the document about\n                  working in teams: https://rebrand.ly/group-work-protocol . You\n                  can also find this and other helpful links in the \"Hover here\n                  for helpful links!\" section at the top of this slack channel.\n                </p>\n                <p>\n                  Please accept your invitations to join your cohort's Github\n                  Organization at https://github.com/thinkful-ei-\n                  {this.state.organization}. I will post coding examples here\n                  that we discuss in class. If you don't see your invite, it may\n                  be in your spam folder. You can also directly accept your\n                  invitation at https://github.com/thinkful-ei-\n                  {this.state.organization}. If you cannot locate your invite or\n                  are unable to join the organization - please respond to this\n                  message by sending me your Github handle.\n                </p>\n                <p>\n                  Also, please register for our course zoom session here:\n                  {this.state.workshopUrl} You need to register with your first\n                  name, last name and email address to be able to attend class.\n                  You only need to register once.\n                </p>\n                <p>I look forward to meeting you all on Monday!</p>\n              </div>\n              <div>\n                <strong>Note for TA Channel</strong>\n                <p>Good Afternoon @Teddy Mitchell @mike.stowe @casey @gwynndp !</p>\n                <p>\n                  Here is the link for the EI Cohort {this.state.cohortNum}{\" \"}\n                  workshop on Monday: {this.state.workshopUrl}\n                </p>\n                <p>\n                  Please join at the start of your shift at 11am EST and be\n                  prepared to introduce yourself to the students. During this\n                  workshop, students will create practice tickets. Instead of\n                  just closing these tickets, please take these tickets.\n                </p>\n                Steps\n                <ol>\n                  <li>Claim the ticket</li>\n                  <li>\n                    Claim all tickets for that team. If you claim a ticket for\n                    Team 1, claim all tickets for all members of Team 1.{\" \"}\n                  </li>\n                  <li>\n                    Go to the Discord Server and the team for the tickets.\n                  </li>\n                  <li>\n                    Ask each of the students to share their screen so that you\n                    know they are able to.\n                  </li>\n                  <li>\n                    Report in #ei-{this.state.startDate} channel any students\n                    who are having trouble sharing their screen.\n                  </li>\n                  <li>Close all tickets for the team</li>\n                </ol>\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h5>\n              How to use avoid keyword to make sure students who have requested\n              not to be paired with other students aren't paired.\n            </h5>\n            <img src={avoidExample} alt=\"example of avoid function\" />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default YamlGenerator;\n","import React from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, CardText, CardHeader } from 'reactstrap';\nimport apiUrl from '../../env';\nimport \"../../../node_modules/video-react/dist/video-react.css\"; // import css\nimport { Player } from 'video-react';\nimport rubericVideo from '../../resources/view_a_ruberic(admins).mp4';\nclass Resources extends React.Component {\n    state = {\n        students: []\n    }\n\n    componentDidMount() {\n        this.getItems();\n    }\n\n\n    generateYaml(e) {\n        e.preventDefault();\n        console.log(\"generating\");\n\n    }\n\n    getItems() {\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(students => {\n                console.log(students);\n                this.setState({ students })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <Container>\n                <h2>Helpful Instructor Resources</h2>\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>Points of Contact</CardHeader>\n                            <CardBody>\n                                <CardTitle tag='h5'>Careers/Mentors/ASMs</CardTitle>\n                                <CardText>Alanna Ellis & Ashley Murry (ASMs)</CardText>\n                                <CardTitle tag='h5'>Student's who can't put in a ticket</CardTitle>\n                                <CardText>Alexandra Taylor (@Alexandra Taylor) Synchronous Programs Operations Manager</CardText>\n                                <CardTitle tag='h5'>Interviews & TA Staffing</CardTitle>\n                                <CardText>Derrick Foust (@Derrick Foust) Senior Educator Success Manager</CardText>\n                                <CardTitle tag='h5'>Syllabus Generation & Student Auditor</CardTitle>\n                                <CardText>Richard Greenhill</CardText>\n                                <CardTitle tag='h5'>Curriculum updates</CardTitle>\n                                <CardText>Rush Cosgrove & Daphne Isom</CardText>\n                            </CardBody>\n                        </Card>\n                        <Card>\n                            <CardHeader>Curriculum Writing Resources</CardHeader>\n                            <CardBody>\n                                <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.loom.com/share/16d0e8700eb346509ef79ea95a0ef7e0\">How to begin your review</a></p>\n                                <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.loom.com/share/6e309058a8354c50b758905df94d768e\">How to submit a review via PR or issue</a></p>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card>\n                            <CardHeader>Useful Links</CardHeader>\n                            <CardBody>\n                                <CardText>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg.atlassian.net/secure/RapidBoard.jspa?rapidView=1646&projectKey=TFINS&selectedIssue=TFINS-289\">Jira (Keep track of Todos)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-portal1.sharepoint.com/default.aspx\">Chegg Company Calendar</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-my.sharepoint.com/:x:/p/tauhida/ETnbziQmH6hMtz0PVXckRrgBOgEdKJSlayVg56dEQKMfgw\">Cohort Module Completion Doc (EI)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/spreadsheets/d/1p0mXIIIC68RCw4UgXLt3Z-ZsyY2eHM3XRlEqXv6ikX8/edit?ts=5ef21b21#gid=168336559\">Cohort Staffing</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Thinkful-Ed/full_time_career_path\">Thinkful Github (Yamls, Syllabi & Master Syllabi)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg.sharepoint.com/sites/GOComm/Shared%20Documents/Forms/AllItems.aspx?originalPath=aHR0cHM6Ly9jaGVnZy5zaGFyZXBvaW50LmNvbS86Zjovcy9HT0NvbW0vRWxIa3hpdmJUODFObUV5OWo4RTVidmdCTnNTWENOX09Lcms4ZTFOLWFJOHEwZz9ydGltZT1vWFFQWHRsRjJFZw&id=%2Fsites%2FGOComm%2FShared%20Documents%2FThinkful%20Accessible%20Comms%2FZoom%20Webinar%20Documentations%2FZoomWebinars-CreatingZoomWebinars%2Epdf&parent=%2Fsites%2FGOComm%2FShared%20Documents%2FThinkful%20Accessible%20Comms%2FZoom%20Webinar%20Documentations\">How to Create a Zoom Webinar</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://lark.thinkful.com/students/\">Lark (see student dashboards/enrollment status)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/spreadsheets/d/1_4sUKlpGaqynWpVW-DTE97RocVj2N0fmqWThkH_rT_s/edit#gid=0\">Instructor Peer Review Sheet</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/document/d/1I3qjTxLL1ONiK6v-ZAAOYScLLIDiTdRohY0wbpyglWw/edit#heading=h.xqnu31mn5s8b\">Instructor Peer Review Instructions</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-my.sharepoint.com/:x:/p/emma/EVfx_RaoHJ5Gh0bqFEfogOMBd3G7MwjOeqfg-s0GxUt2qQ?e=QS567v\">Student Roster</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Thinkful-Ed/ei-shopping-list-solutions\">Shopping List Starter Repo (EI)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://thinkful.slides.com/users/sign_in\">Slides</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-my.sharepoint.com/:f:/p/tauhida/EgpyabZsgy5Mhz8yuIBwc4IBahNn7lrwA366oyVmQ4NOlQ?e=CeunqK\">Student Health Docs</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://lark.thinkful.com/courses/43/tickets/\">Student Tickets (EI)</a></p>\n                                     <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://student-auditor.herokuapp.com/\">Student Auditor</a></p>\n                                     <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://lark.thinkful.com/student-progress/\">Student Progress</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ftgen-trigger.herokuapp.com/\">Syllabus Generator</a></p>                                   \n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-my.sharepoint.com/:x:/r/personal/tauhida_chegg_com/_layouts/15/guestaccess.aspx?share=ETwzAHpJQrdDvccTzrF9hDIB_-7wY3xo9ARL3FtoG2l6bA\">Audit Spreadsheet</a></p>\n                                    \n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://dashboard.thinkful.com/\">Thinkful Courses Dashboard (Information about courses, modules, grading ruberics and checkpoints)</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg.atlassian.net/wiki/spaces/TFPED/pages/386075112/CMS+Content+Reader\">Thinkful PED</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Thinkful-Ed/ei-sample-bookmarks-app\">Thinkful Bookmarks App</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg.sharepoint.com/sites/InstructionalDesign/SitePages/Curriculum%20Feedback%20and%20Project%20Requests.aspx\">Put in Tickets about Qualified.io and Curriculum</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg.atlassian.net/wiki/spaces/TFPED/pages/175412174/Bugs+Cleanup\">Put in Tickets about Sessions</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://chegg-my.sharepoint.com/personal/ttaylor_chegg_com/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fttaylor%5Fchegg%5Fcom%2FDocuments%2FCohort49Polls&originalPath=aHR0cHM6Ly9jaGVnZy1teS5zaGFyZXBvaW50LmNvbS86ZjovcC90dGF5bG9yL0VxRDVmaUdKaFhWQmlzYmtVYWF0ODZNQkFzYm0wUHdLc3BFR056cHBJMjJrbFE_cnRpbWU9YjdpRHlwWEgyRWc\">Upload Poll Results</a></p>\n                                    <p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://gist.github.com/oampo/da53e70f798dccc9923616d000c820ff\">Decoder Capstone</a></p>\n\n\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>Grading Ruberics</CardHeader>\n                            <CardBody>\n                                <CardTitle tag='h5'>How to View a Ruberic</CardTitle>\n\n                                <Player\n                                    playsInline\n                                    // poster=\"/assets/poster.png\"\n                                    src={rubericVideo}\n                                />\n\n                            </CardBody>\n                        </Card>\n\n                    </Col>\n                    <Col>\n                        <Card>\n                            <CardHeader>How to Impersonate a Student</CardHeader>\n                            <CardBody>\n                                <CardTitle tag='h5'>Impersonate a student to see checkpoint submissions</CardTitle>\n                                <CardText>(find student email from their dashboard) <p>How to impersonate a student: <a href=\"https://accounts.thinkful.com/admin/impersonate/student_email\">Impersonate</a></p>\n                                    <p>Make sure you unimpersonate after you are done\n                                    <a href=\"https://accounts.thinkful.com/admin/unimpersonate\"> Unimpersonate</a></p>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Card>\n                            <CardHeader>Reminder about ASM Changes</CardHeader>\n                            <CardBody>\n                                <CardText>\n                                    <p>Hello EI Instructors,</p>\n                                    <p>In order to ensure that students as well as staff (instructors, TAs, ASMs, ops managers) are supported well as we can smoothly run very large cohorts, Aaron is taking an initiative to have cohort specific ASMs. For EI, this will start with the 11/9 EI C47 cohort and we will use this cohort as an opportunity to refine this process.</p>\n                                    <p>@Austen Weinhart and @Alanna Ellis will be the ASMs to support C47 starting 11/9.</p>\n\n                                    <p>Our cohort history shows that there are always a higher number of pings than normal during the first week of any program. We would like to reduce the number of pings in the staff channel by minimizing (with the hope of eliminating) pings due to absences and any other non-emergencies in the staff channel. </p>\n\n                                    <p>To achieve this goal of lessening the information posted in the staff channel, reducing the risk of losing valuable information on the slack channel, and have a better place to document and take decisions based on documented information, with the help of the EI instructors, we would like to establish the following - </p>\n                                    <ul>\n                                       <li> Austen and Alanna are working hard to ensure that students are aware of what an absence is defined as and withdrawal occurs if there is/are absence(s). These expectations have been clearly set with students multiple times. For C47 (and eventually all other cohorts coming after C47), you should assume that the expectations around absences is all made clear to students before they start by the ASMs.</li>\n<li>If you see a student absent by our absence policy (consistently late in workshops, not in pair session, not responding to your call within 45 minutes of class time), follow your standard procedure of pinging the student to see if the student is absent or not, establish that there is an absence and ask them to fill out the absence form. After that, please update the health chart. Please DO NOT ping Austen, Alanna or any ASMs with the list of students who are absent in the staff channel. Update the health chart and provide necessary notes there. An updated health chart at the end of the day will be the source of truth for absences. This is where Austen and Alanna will go to find the list of students that are absent. </li>\n                                        <li>Austen and/or Alanna will update the staff channel with any administrative changes that needs to happen for the instructor to look at prior to class the next day. Please give them this time to handle all the work that they need to do. This also means that health charts need to be updated at a reasonable time (especially for attendance) so she has the time to take necessary actions. I am going to ask you to complete updating the attendance column by 4 pm EST every day. </li>\n                                        <li>Please be sure to put comments in the comment section of the health sheet. When we have to take any actions for student success (absences, withdrawals, SPA etc.), we need to justify them, and your comments plays a vital role in ensuring student success.  For example, if a student is absent, is it for the whole day / morning session only / afternoons session only etc.</li>\n                                        <li>To sum up, in this workflow, there should not be any ping to Austen, Alanna (or any ASMs) in the staff channel about absences. </li>\n                                        <li>Any other concerns you have on students should also go to the health sheet and Austen / Alanna will be getting information from there and taking the appropriate steps and providing you updates in the slack channel. </li>\n                                        <li>Our goal is to use a good process to draw Austen and Alanna's attention and with their help come to a solution for the students. The health chart should be the source of truth for student status. All ASMs has access to this. Therefore, if Austen and Alanna need to draw their attention, they will do so. You don't need to send messages to them. If you need to follow up on a student status that you have reported in the health chart, please use emails as much as possible, and for things that can't wait and there is an immediate need, please use slack. </li>\n                                        <li>All ASMs, instructors and students will be using the weekly calendar (Emma has already send this to you and posted in the instructor channel) as the only source of truth for student progress, good standing etc. Please be sure to review this calendar for your section and use only this and point all students to this as their only schedule / calendar. </li>\n\n\n                                    </ul>\n\n<p>We are looking for your continued feedback and help in making this process a success. I will be asking you for updates in our weekly meetings to hear your thoughts. Also, Austen and Alanna is very interested in a bi-weekly meeting with the C47 instructors to make sure the 2 teams are in sync. The first meeting will be set up by @Aaron Lamphere, so expect that invitation from him. After the first meeting is completed, @Rich Greenhill will take the lead for this meeting to continue at bi-weekly intervals so there is communications between ASM and EI instructor teams to discuss and ensure student success.</p>\n<p>Again, this is launching11/9 for C47 and we will be continuing this process going forward for other cohorts with some tweaks as we learn from C47.</p>\n<p>Let me know if you have any questions or any clarifications needed. Thank you for all your help in making this process a success.</p>\n\n\n</CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>);\n    }\n}\n\nexport default Resources;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from '../Modals/Modal';\nimport DataTable from '../Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport apiUrl from '../../env';\n\nclass TicketCounter extends React.Component {\n\n    state = {\n        students: [],\n        studentList: '',\n        cohort: '',\n        githuborg: '',\n        tickets:0,\n        requests:[]\n\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let chat =this.state.studentList.split(\"\\n\");\n        this.parseStudents(chat);\n    }\n\n    parseStudents(tickets) {\n        let ticketsArr=[];\n        let ticketSenders = [];\n        let requests = [];\n        tickets.forEach(ticket=>{\n          //  console.log(ticket)\n            let item = {};\n            if(ticket.includes('@')){\n                ticketSenders.push(ticket);\n            }\n            if(ticket.includes('/create-ticket')){\n               ticketsArr.push(ticket);\n            }\n            \n        })\n       for(let i =0; i < ticketsArr.length;i++)\n       if(ticketsArr[i] && ticketSenders[i]){\n           requests.push({\n               student:ticketSenders[i],\n               request:ticketsArr[i]\n           });\n       }\n        this.setState({\n            tickets:ticketsArr.length,\n            requests:requests\n        })\n        \n\n    }\n\n\n    render() {\n\n        let items = (<tr><td>No Items</td></tr>);\n        if (this.state.requests.length > 0) {\n            items = this.state.requests.map((item,idx) => {\n             //   console.log(item)\n                return (\n                    <div key={idx}>\n                        {item.student}  {item.request}\n                    </div>\n                )\n            })\n        }\n\n        return (\n            <Container className=\"App\">\n                <Row>\n                    <Col>\n                        <h2>Ticket Counter</h2>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Paste Support Channel Content Here</label>\n                                <textarea className=\"form-control\" id=\"studentList\" rows=\"10\" name=\"studentList\" onChange={this.handleChange} value={this.state.studentList} />\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-10\">\n                                    <button className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)}>Load Students</button>\n                                </div>\n                            </div>\n                        </form>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md='2'>\n                    Number of Tickets: <strong>{this.state.tickets}</strong>\n                    </Col>\n                    <Col>\n                        {items}\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default TicketCounter;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from '../Modals/Modal';\nimport DataTable from '../Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\nimport apiUrl from '../../env';\n\nclass TeamGenerator extends React.Component {\n\n    state = {\n        students: [],\n        groups:[],\n        discordUrl:'',\n        studentRoster:'',\n        numPerGroup:0\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let studentArr = this.state.studentRoster.replace(/\\t/g, \" \").split(\"\\n\");\n        let firstNames = studentArr.map(student=>{\n            let names = student.split(' ')\n            return names[0];\n        });\n        \n       this.shuffle(firstNames);\n        let numOfTeams=Math.ceil(firstNames.length/this.state.numPerGroup);\n       let groups=this.createGroups(firstNames, numOfTeams);\n        let lastGroup =groups[groups.length-1];\n        if(lastGroup.length==1){\n            groups[groups.length-2].push(...lastGroup);\n            groups.pop();\n        }\n        this.setState({groups});\n    }\n    createGroups(arr, numGroups) {\n        const perGroup = Math.ceil(arr.length / numGroups);\n        return new Array(numGroups)\n          .fill('')\n          .map((_, i) => arr.slice(i * perGroup, (i + 1) * perGroup));\n      }\n\n    shuffle(array) {\n        let currentIndex = array.length,  randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (currentIndex != 0) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex--;\n      \n          // And swap it with the current element.\n          [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex], array[currentIndex]];\n        }\n      \n        return array;\n      }\n    componentDidMount(){\n       /* fetch(apiUrl)\n        .then(response => response.json())\n        .then(students =>this.setState({ students }))\n        .catch(err => console.log(\"Error:\",err))*/\n    }\n\n   \n\n    render() {\n        let items = (<div>No Items</div>);\n        if (this.state.groups.length > 0) {\n            items = this.state.groups.map((item,index) => {\n                return (\n                    <div key={index}>* Team {index+1} - {item.join('/')}</div>\n                )\n            })\n        }\n              return (\n            <Container className=\"App\">\n                <Row>\n                    <Col>\n                        <h2>Team Generator</h2>\n                        <form>\n                            <div className=\"form-group\">\n                                <label>Discord Url</label>\n                                <input type=\"text\" className=\"form-control\" id=\"discordUrl\"  name=\"discordUrl\" onChange={this.handleChange} value={this.state.discordUrl} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Student Roster</label>\n                                <textarea className=\"form-control\" id=\"studentRoster\"   rows=\"10\" name=\"studentRoster\" onChange={this.handleChange} value={this.state.studentRoster} />\n                            </div>\n                            <div className=\"form-group\">\n                            <label>Number of Students per Team</label>\n                                   <input type=\"number\" className=\"form-control\" id=\"numPerGroup\"  name=\"numPerGroup\" onChange={this.handleChange} value={this.state.numPerGroup} />\n                       \n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-5\">\n                                    <button className=\"btn btn-primary\" onClick={this.handleSubmit.bind(this)}>Generate Teams</button>\n                                </div>\n                            </div>\n                        </form>\n                    </Col>\n                </Row>\n                <Row>\n                   \n                    <Col>\n                    <div>### Teams for this week</div>\n                    <div>Join the appropriate team voice channel on your designated [Discord Server]({this.state.discordUrl})</div>\n                        {items}\n                    </Col>\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nexport default TeamGenerator;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Roster from './components/Roster/Roster';\nimport Attendance from './components/Attendance/Attendance';\nimport Organization from './components/Organization/Organization';\nimport YamlGenerator from './components/YamlGenerator/YamlGenerator';\nimport Resources from './components/Resources/Resources';\nimport TicketCounter from './components/TicketCounter/TicketCounter'\nimport TeamGenerator from './components/TeamGenerator/TeamGenerator';\n\n\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light  justify-content-between\">\n          <button className=\"navbar-brand\">Thinkful Instructor Apps</button>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n            {/* <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/roster\">Roster</Link>\n  </li>*/}\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/yaml\">Yaml File Generator</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/attendance\">Attendance Taker</Link>\n              </li>\n              {/*<li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/organization\">Github Org Invite Sender</Link>\n</li>*/}\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/teamgenerator\">Team Generator</Link>\n              </li>\n             \n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" activeClassName=\"active\" to=\"/resources\">Resources</Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        \n        <Switch>\n          <Route path=\"/yaml\">\n            <YamlGenerator />\n          </Route>\n          <Route path=\"/attendance\">\n            <Attendance />\n          </Route>\n          <Route path=\"/organization\">\n            <Organization />\n          </Route>\n          <Route path=\"/resources\">\n            <Resources />\n          </Route>\n         {/**\n          * <Route path=\"/roster\">\n            <Roster />\n          </Route>\n          */} \n          <Route path=\"/ticket\">\n            <TicketCounter />\n          </Route>\n          <Route path=\"/teamgenerator\">\n            <TeamGenerator />\n          </Route>\n          <Route exact path=\"/\">\n            <YamlGenerator />\n          </Route>\n        \n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avoid-example.171b1e45.png\";","module.exports = __webpack_public_path__ + \"static/media/view_a_ruberic(admins).e21a7e92.mp4\";"],"sourceRoot":""}